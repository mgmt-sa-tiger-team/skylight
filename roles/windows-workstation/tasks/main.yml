---
- set_fact:
    user: "{{ user_prefix }}{{ hostvars[inventory_hostname].student | regex_replace('[^0-9]', '') }}"

- block:
  - name: install Chocolatey
    win_chocolatey:
      name: chocolatey
      state: present

  - name: disable enhanced exit codes
    win_chocolatey_feature:
      name: useEnhancedExitCodes
      state: disabled
    when: ansible_version.full is version_compare('2.8', '<')

  - name: Install Visual Studio Code, Git, and Putty
    win_chocolatey:
      name: "{{ item }}"
      ignore_checksums: true
    with_items:
      - visualstudiocode
      - git
      - googlechrome
    register: chocolatey_packages_install
    until: chocolatey_packages_install is success
    delay: 3
    retries: 5

  - name: Create an shortcut to Docs site
    win_shortcut:
      src: '%ProgramFiles%\Google\Chrome\Application\chrome.exe'
      dest: '%UserProfile%\Desktop\Workshop Docs.lnk'
      args: --new-window http://docs.{{ dns_domain_name }}/
      directory: '%ProgramFiles%\Google\Chrome\Application'
      icon: '%ProgramFiles%\Google\Chrome\Application\chrome.exe,0'

  - name: Create an shortcut to Tower site
    win_shortcut:
      src: '%ProgramFiles%\Google\Chrome\Application\chrome.exe'
      dest: '%UserProfile%\Desktop\Ansible Tower.lnk'
      args: --new-window http://s{{ user | regex_replace('[^0-9]', '') }}-tower.{{ dns_domain_name }}/
      directory: '%ProgramFiles%\Google\Chrome\Application'
      icon: '%ProgramFiles%\Google\Chrome\Application\chrome.exe,0'

  - name: Create an shortcut to the user's Gitlab ansible-playbooks repository
    win_shortcut:
      src: '%ProgramFiles%\Google\Chrome\Application\chrome.exe'
      dest: '%UserProfile%\Desktop\GitLab.lnk'
      args: --new-window https://gitlab.{{ dns_domain_name }}/{{ user_prefix }}{{ user | regex_replace('[^0-9]', '') }}/{{ user_prefix }}{{ user | regex_replace('[^0-9]', '') }}
      directory: '%ProgramFiles%\Google\Chrome\Application'
      icon: '%ProgramFiles%\Google\Chrome\Application\chrome.exe,0'

  - name: Create an shortcut to Ansible Docs site
    win_shortcut:
      src: '%ProgramFiles%\Google\Chrome\Application\chrome.exe'
      dest: '%UserProfile%\Desktop\Ansible Docs.lnk'
      args: --new-window http://docs.ansible.com/
      directory: '%ProgramFiles%\Google\Chrome\Application'
      icon: '%ProgramFiles%\Google\Chrome\Application\chrome.exe,0'

  - name: Set git to cache credentials
    win_command: git config --global credential.helper manager

  - name: Allow insecure git repos for self signed certificates
    win_command: git config --global http.sslVerify "false"

  - name: Set git user
    win_command: git config --global user.name "{{ user }}"

  - name: Set git user email
    win_command: git config --global user.email "{{ user }}@{{ dns_domain_name }}"

  - name: Set git password
    win_shell: cmdkey /generic:LegacyGeneric:target=git:https://gitlab.{{ dns_domain_name }} /user:{{ user }} /pass:"{{ users_password }}"

  - name: Set git password
    win_shell: cmdkey /generic:LegacyGeneric:target=git:https://{{ user }}@gitlab.{{ dns_domain_name }} /user:{{ user }} /pass:"{{ users_password }}"

  - name: Copy .gitconfig to user directory
    win_copy:
      src: C:\Windows\.gitconfig
      dest: C:\Users\{{ user }}\.gitconfig
      remote_src: True

  - name: Clone student git repo
    win_command: git clone https://gitlab.{{ dns_domain_name }}/{{ user }}/{{ user }}.git
    args:
      chdir: C:\Users\{{ user }}\Documents
      creates: C:\Users\{{ user }}\Documents\{{ user }}

  - name: Create Readme file to intialize the repo
    win_copy:
      dest: C:\Users\{{ user }}\Documents\{{ user }}\README.md
      content: ""
    register: initialize

  - name: Add initial file
    win_command: git add C:\Users\{{ user }}\Documents\{{ user }}\README.md
    args:
      chdir: C:\Users\{{ user }}\Documents\{{ user }}
    when: initialize.changed

  - name: Commit initial file
    win_command: git commit -m "Initialize"
    args:
      chdir: C:\Users\{{ user }}\Documents\{{ user }}
    when: initialize.changed

  - name: Push initial commit
    win_command: git push
    args:
      chdir: C:\Users\{{ user }}\Documents\{{ user }}
    when: initialize.changed

  - name: Create VS Code Settings Directory
    win_file:
      path: C:\Users\{{ user }}\AppData\Roaming\Code\User\
      state: directory

  - name: Configure VS Code Settings File
    win_copy:
      src: files/settings.json
      dest: C:\Users\{{ user }}\AppData\Roaming\Code\User\settings.json

  - name: Set Chrome to default Browser
    win_regedit:
      path: HKCU:\Software\Microsoft\Windows\Shell\Associations\UrlAssociations\{{ item }}\UserChoice
      name: ProgId
      data: ChromeHTML
    with_items:
      - http
      - https

  - name: Set Chrome to not ask about default browser
    win_regedit:
      path: HKLM:\Software\Policies\Google\Chrome
      name: DefaultBrowserSettingEnabled
      data: 0
      type: dword

  - name: Disable Chrome Welcome Screen
    win_regedit:
      path: HKLM:\Software\Policies\Google\Chrome
      name: "{{ item }}"
      data: 0
      type: dword
    with_items:
      - PromotionalTabsEnabled
      - WelcomePageOnOSUpgradeEnabled

  - name: Disable Chrome Syncing
    win_regedit:
      path: HKLM:\Software\Policies\Google\Chrome
      name: SyncDisabled
      data: 1
      type: dword

  - name: Disable Server Management at Startup
    win_regedit:
      path: HKCU:\Software\Microsoft\ServerManager\
      name: DoNotOpenServerManagerAtLogon
      data: 1
      type: dword

  - name: Remove EC2 Feedback Icon
    win_file:
      path: C:\Users\{{ user }}\Desktop\EC2 Feedback.website
      state: absent

  - name: Remove EC2 Website Icon
    win_file:
      path: C:\Users\{{ user }}\Desktop\EC2 Microsoft Windows Guide.website
      state: absent

  become: yes
  become_user: "{{ dns_domain_name_short }}\\{{ user }}"
  become_method: runas

- include_tasks: myrtille.yml

- include_tasks: git_lab.yml
  when: git_lab | bool

- include_tasks: adv_lab.yml
  when: advanced_lab | bool
